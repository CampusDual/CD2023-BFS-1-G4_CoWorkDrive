<?xml version="1.0" encoding="UTF-8"?>
<JdbcEntitySetup
        xmlns="http://www.ontimize.com/schema/jdbc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.ontimize.com/schema/jdbc http://www.ontimize.com/schema/jdbc/ontimize-jdbc-dao.xsd"
        catalog="" schema="${mainschema}" table="booking"
        datasource="mainDataSource" sqlhandler="dbSQLStatementHandler">
<DeleteKeys>
<Column>id_booking</Column>
</DeleteKeys>
<UpdateKeys>
<Column>id_booking</Column>
</UpdateKeys>
<GeneratedKey>id_booking</GeneratedKey>
    <Queries>
        <Query id="seats_info">
            <!--
                The query retrieves information about available seats in trips.
                It calculates the number of free seats by subtracting the count of bookings from the total number of seats in a car.
                The query involves the trip, tuser, car, and booking tables with appropriate joins and groupings.
            -->
            <AmbiguousColumns>
                <AmbiguousColumn name="id_trip" prefix="t" />
            </AmbiguousColumns>
            <ValidColumns>
                <Column>free_seats</Column>
                <Column>id_trip</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT (c.seats - count(b.*)) as free_seats, t.id_trip
                    FROM trip t JOIN tuser u ON t.id_user = u.user_
                    JOIN car c ON u.user_ = c.id_user
                    LEFT JOIN booking b ON b.id_trip = t.id_trip
                    #WHERE#
                    GROUP BY c.seats, t.id_trip
                   ]]>
            </Sentence>
        </Query>
        <Query id="my_bookings">
            <!--
                The query retrieves bookings of the authenticated user.
                It joins the booking, trip, tuser, and car tables to gather relevant information.
                The WHERE clause includes a condition to filter bookings with dates greater than or equal to the current date.
            -->
            <AmbiguousColumns>
                <AmbiguousColumn name="id_user" prefix="b" />
            </AmbiguousColumns>
            <ValidColumns>
                <Column>origin_title</Column>
                <Column>origin_address</Column>
                <Column>destination_title</Column>
                <Column>destination_address</Column>
                <Column>date</Column>
                <Column>time</Column>
                <Column>name</Column>
                <Column>id_car_brand</Column>
                <Column>id_car_model</Column>
                <Column>brand_name</Column>
                <Column>model_name</Column>
                <Column>car_registration</Column>
                <Column>color_name</Column>
                <Column>surname1</Column>
                <Column>surname2</Column>
                <Column>email</Column>
                <Column>id_trip</Column>
                <Column>id_car</Column>
                <Column>id_user</Column>
                <Column>id_booking</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT b.id_booking, t.origin_title, t.origin_address, t.destination_title, t.destination_address, t.date, t.time, b.id_user,
                    tu.name as driver, tu.surname1, tu.surname2, tu.email, t.id_trip, t.id_car, c.id_car_brand, c.id_car_model, c.car_registration,
                    cb.brand_name, cm.model_name, co.color_name
                    FROM trip t
                    JOIN booking b ON t.id_trip = b.id_trip
                    JOIN car c ON c.id_car = t.id_car
                    JOIN color co ON co.id_color = c.id_color
                    JOIN tuser tu ON tu.user_ = c.id_user
                    JOIN car_brand cb ON c.id_car_brand = cb.id_car_brand
                    JOIN car_model cm ON c.id_car_model = cm.id_car_model
                    #WHERE#
                        AND t.date >= CAST(now() as date) AND t.active = true
                   ]]>
            </Sentence>
        </Query>
        <Query id="my_bookings_done">
            <!--
                The query retrieves bookings of the authenticated user that are completed.
                It joins the booking, trip, tuser, and car tables to gather relevant information.
                The WHERE clause includes a condition to filter bookings with dates less than the current date.
            -->
            <AmbiguousColumns>
                <AmbiguousColumn name="id_user" prefix="b" />
            </AmbiguousColumns>
            <ValidColumns>
                <Column>id_booking</Column>
                <Column>origin_title</Column>
                <Column>origin_address</Column>
                <Column>destination_title</Column>
                <Column>destination_address</Column>
                <Column>date</Column>
                <Column>time</Column>
                <Column>id_user</Column>
                <Column>id_driver</Column>
                <Column>driver</Column>
                <Column>surname1</Column>
                <Column>surname2</Column>
                <Column>id_trip</Column>
                <Column>id_car</Column>
                <Column>id_car_brand</Column>
                <Column>id_car_model</Column>
                <Column>car_registration</Column>
                <Column>brand_name</Column>
                <Column>model_name</Column>
                <Column>color_name</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT b.id_booking, t.origin_title, t.origin_address, t.destination_title, t.destination_address, t.date, t.time, b.id_user,
                    tu.user_ as id_driver, tu.name as driver, tu.surname1, tu.surname2, t.id_trip, t.id_car, c.id_car_brand, c.id_car_model, c.car_registration,
                    cb.brand_name, cm.model_name, co.color_name
                    FROM trip t
                    JOIN booking b ON t.id_trip = b.id_trip
                    JOIN car c ON c.id_car = t.id_car
                    JOIN color co ON co.id_color = c.id_color
                    JOIN tuser tu ON tu.user_ = c.id_user
                    JOIN car_brand cb ON c.id_car_brand = cb.id_car_brand
                    JOIN car_model cm ON c.id_car_model = cm.id_car_model
                    #WHERE#
                        AND t.date < CAST(now() as date)
                   ]]>
            </Sentence>
        </Query>
        <Query id="number_user_in_booking">
        <!--
            Retrieves the number of users in a booking and their corresponding trip IDs and user IDs.
            Counts the total number of rows in the booking table and returns the count as numberUserBooking.
        -->
            <ValidColumns>
                <Column>numberUserBooking</Column>
                <Column>id_trip</Column>
                <Column>id_user</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT count(*) as numberUserBooking
                    FROM booking
                    #WHERE#
                ]]>
            </Sentence>
        </Query>
        <Query id="data_email_driver">
        <!--
            Retrieves data related to the email and driver information.
            Selects origin_title, destination_title, date, name, email, and id_trip columns from the trip and tuser tables.
            Joins the trip and tuser tables on the user_ column from tuser and the id_user column from trip.
        -->
            <ValidColumns>
                <Column>origin_title</Column>
                <Column>destination_title</Column>
                <Column>date</Column>
                <Column>name</Column>
                <Column>email</Column>
                <Column>id_trip</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT t.origin_title, t.destination_title, t.date, tu."name", tu.email
                    FROM trip t
                    JOIN tuser tu ON tu.user_ = t.id_user
                    #WHERE#
                ]]>
            </Sentence>
        </Query>
    </Queries>
</JdbcEntitySetup>